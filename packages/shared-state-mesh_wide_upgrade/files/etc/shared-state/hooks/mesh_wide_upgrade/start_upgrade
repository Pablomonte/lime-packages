#!/usr/bin/lua

--! LibreMesh
--! Copyright (C) 2019  Gioacchino Mazzurco <gio@altermundi.net>
--!
--! This program is free software: you can redistribute it and/or modify
--! it under the terms of the GNU Affero General Public License as
--! published by the Free Software Foundation, either version 3 of the
--! License, or (at your option) any later version.
--!
--! This program is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU Affero General Public License for more details.
--!
--! You should have received a copy of the GNU Affero General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.

local JSON = require("luci.jsonc")
local utils = require "lime.utils"
local mesh_upgrade = require "lime.mesh-upgrade"


--if already involved in an upgrade transaction do nothing
if not mesh_upgrade.upgrade_in_progress() then
	for node, s_s_data in pairs(JSON.parse(io.stdin:read("*all"))) do
		--if any node has started an upgrade process and start one too?
		--fetch the info from the master node publication?
		if s_s_data.data.master_node == node then
			mesh_upgrade.start(s_s_data.data)
			utils.unsafe_shell('logger -p daemon.info -t "messwideupgrade" "starting upgrade from"' ..
			s_s_data.data.repo_url .. " " .. node)
			--start the upgrade process referencing the original upgrade publication
			--start_upgrade(s_s_data.timestamp,s_s_data.id,sate="started",s_s_data.data.master_node)
		end
		utils.unsafe_shell('logger -p daemon.info -t "messwideupgrade" "hoock +++++ "' ..
		JSON.stringify(s_s_data.data) .. " " .. node)
		utils.log("hook started ", JSON.stringify(s_s_data.data), node)
	end
else
	utils.unsafe_shell('logger -p daemon.info -t "messwideupgrade" "already started an upgrade process"')
	utils.log("already started an upgrade process")
end
