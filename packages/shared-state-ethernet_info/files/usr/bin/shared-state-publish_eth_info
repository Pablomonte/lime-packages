local JSON = require("luci.jsonc")
local utils = require('lime.utils')
local shared_state = require("shared-state")

local hostname = utils.hostname()

function get_interface_ip(ifname)
	return string.gsub(utils.unsafe_shell("ip -6 address show " ..ifname.." | awk '{if ($1 == \"inet6\") print $2}' | grep fe80 | awk -F/ '{print $1}'"), "\n", "")
end

function get_neighbour_routers()
	local links = {}
	local lines = utils.unsafe_shell("ping -i 0.1 -c 2 ff02::1%br-lan 2> /dev/null | awk '{if ($3 == \"from\") print substr($4, 1, length($4)-1)}'| sort -u -r")
	for line in string.gmatch(lines,'[^\r\n]+') do
		ip_if = utils.split(line,"%%")
		table.insert(links,{ip_dest=ip_if[1],interface=ip_if[2],ip_orig=get_interface_ip(ip_if[2])})
	end
	return links
end

function get_neigh()
	local links = {}
	io.input(io.popen(shared_state.CANDIDATE_NEIGHBORS_BIN))
	for line in io.lines() do
		print(line)
		ip_if = utils.split(line,"%%")
		print(ip_if[2])
		if ip_if[2]:match("br-lan") then
			table.insert(links,{ip_dest=ip_if[1],interface=ip_if[2],ip_orig=get_interface_ip(ip_if[2])})
		end
	end
end

function get_eth_info()
    return {hostname=hostname, links=get_neighbour_routers() }
end

local result = { [hostname] = get_eth_info() }
io.popen("shared-state insert eth_info", "w"):write(JSON.stringify(result))
