#!/usr/bin/lua

--! LibreMesh
--! Copyright (C) 2019  Gioacchino Mazzurco <gio@altermundi.net>
--! Copyright (C) 2024  Javier Jorge <jjorge@inti.gob.ar>
--!
--! This program is free software: you can redistribute it and/or modify
--! it under the terms of the GNU Affero General Public License as
--! published by the Free Software Foundation, either version 3 of the
--! License, or (at your option) any later version.
--!
--! This program is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU Affero General Public License for more details.
--!
--! You should have received a copy of the GNU Affero General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.

local JSON = require("luci.jsonc")
local node_status = require ("lime.node_status")
local network = require ("lime.network")
local iwinfo = require "iwinfo"


function get_wifi_links_info()
	local stations = node_status.get_stations()
	local links = {}
	for _, station in ipairs(stations) do
		macparts = network.get_mac(station.iface)
		src_macaddr = string.lower(table.concat(macparts,":"))
		local station_stats = node_status.get_station_stats(station)
		local freq = iwinfo.nl80211.frequency(station.iface)
		local chanenel = iwinfo.nl80211.channel(station.iface)
		local key_table = {string.lower(string.gsub(src_macaddr,":","")),string.lower(string.gsub(station.station_mac,":",""))}
		table.sort(key_table)
		links[table.concat(key_table)]= {src_mac=src_macaddr ,dst_mac=string.lower(station.station_mac),
		signal=station_stats.signal,chains=station_stats.chains,iface=station.iface,
		rx_rate=station_stats.rx_rate,tx_rate=station_stats.tx_rate,freq=freq, channel = chanenel }
	end
	utils.printJson(links)
	return links
end

local hostname = io.input("/proc/sys/kernel/hostname"):read("*line")
local result = { [hostname] = get_wifi_links_info() }
io.popen("shared-state-async insert wifi_links_info", "w"):write(JSON.stringify(result))
