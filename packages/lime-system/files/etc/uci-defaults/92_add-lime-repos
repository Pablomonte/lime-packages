#!/bin/sh

[ -f /etc/lime_release ] && . /etc/lime_release || {
	echo "LibreMesh version not found in /etc/lime_release - skipping"
	exit 0
}

[ -f /etc/apk/repositories.d/distfeeds.list ] && {
	repo='apk'
	feeds_file='/etc/apk/repositories.d/limefeeds.list'
	dist_feeds_file='/etc/apk/repositories.d/distfeeds.list'
	main_feed_path='apk/'
	arch="$(cat /etc/apk/arch)"
} || ([ -f /etc/opkg/distfeed.conf ] && {
	repo='opkg'
	feeds_file='/etc/opkg/limefeeds.conf'
	dist_feeds_file='/etc/opkg/distfeeds.conf'
	main_feed_path=''
	arch="$(grep OPENWRT_ARCH /etc/os-release | sed 's/OPENWRT_ARCH=\"\(.*\)\"/\1/')"
	key_name="a71b3c8285abd28b"
	key_content="RWSnGzyChavSiyQ+vLk3x7F0NqcLa4kKyXCdriThMhO78ldHgxGljM/8"
})

[ -z "$repo" ] && {
	echo "Package manager not found - skipping"
	exit 0
}

[ -f "$feeds_file" ] && {
  echo "LibreMesh $repo feeds already defined - skipping"
  exit 0;
}

openwrt_branch_ref="$(grep -m 1 "openwrt.org/" $dist_feeds_file | sed 's|.*openwrt.org/\(.*\)|\1|' )"

if [ '' != "$openwrt_branch_ref" ]; then
$(echo $openwrt_branch_ref | grep -q 'snapshots') && {
	openwrt_branch='openwrt-main'
} || ($(echo $openwrt_branch_ref | grep -q 'releases') && {
	branch_n="$(echo $openwrt_branch_ref | sed 's/releases\///')"
	openwrt_branch="openwrt-${branch_n:0:5}"
})
else
	echo "String not found 'openwrt.org' in default ${repo} feeds, cannot determine openwrt branch"
fi

[ "$LIME_CODENAME" == "development" ] && {
	packages_url="http://feed.libremesh.org/${main_feed_path}master";
	arch_packages_url="http://feed.libremesh.org/arch_packages/master/$openwrt_branch/$arch";
} || {
	packages_url="http://feed.libremesh.org/${main_feed_path}$LIME_RELEASE"
	arch_packages_url="http://feed.libremesh.org/arch_packages/$LIME_RELEASE/$openwrt_branch/$arch";
}

profiles_url="http://feed.libremesh.org/${main_feed_path}profiles"

echo "Configuring official LibreMesh $repo feeds"
[ $repo == 'apk' ] && {
echo "$packages_url/packages.adb" > "$feeds_file"
echo "${arch_packages_url}/packages.adb" >> "$feeds_file"
echo "$profiles_url/packages.adb" >> "$feeds_file"
} || ( 
[ $repo == 'opkg' ] && {
echo "src/gz libremesh $packages_url" > "$feeds_file"
echo "src/gz libremesh_arch_packages $arch_packages_url" >> "$feeds_file"
echo "src/gz profiles $profiles_url" >> "$feeds_file"
echo "untrusted comment: signed by libremesh.org key $key_name" > "/etc/opkg/keys/$key_name"
echo "$key_content" >> "/etc/opkg/keys/$key_name"
})
